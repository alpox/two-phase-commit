{"version":3,"sources":["app/constants.js","app/coordinator.js","app/errors.js","app/explosion.js","app/initialize.js","app/notification.js","app/observable.js","app/subordinate.js","app/transaction.js"],"names":["PREPARE","YES","NO","COMMIT","ABORT","ACK","TIMEOUT","BUG_NO","BUG_TIMEOUT","SUCCESS_MSG","FAIL_MSG","SUCCESS","FAIL","Coordinator","_active","_subordinates","_log_listeners","_pending_abort","_pending_commit","log_listener","push","entry","duration","forEach","resolve","transaction","delay","bugs","_prepare","catch","_abort","then","reject","err","_commit","_ignore","active","all","Object","keys","map","transaction_id","_log","transaction_info","id","subordinate","subordinates","concat","is_active","phase","coord_crash_sending_idx","indexOf","coord_crash_sending","splice","setTimeout","coord_crash_receiving_idx","coord_crash_receiving","sub_crash_receiving_idx","sub_crash_receiving","Math","random","sub","sub_crash_sending_idx","sub_crash_sending","prepare","_commit_sub","attempt_n","attempt_commit","commit","_exponential_backoff","_abort_sub","attempt_abort","abort","_notify","attempt","pow","PrepareNoVoteError","NotActiveError","CoordinatorNotActiveError","SubordinateNotActiveError","prototype","create","Error","Explosion","parent_element","_parent_element","explosion","document","createElement","appendChild","classList","add","removeChild","Promise","require","addEventListener","console","log","each","Array","from","getElementsByTagName","katex","render","element","innerHTML","getElementById","start_transaction","window","onkeydown","event","keyCode","delay_value","delay_slider","innerText","value","bind_log_updater","coordinator","sub1","sub2","sub3","coordinator_active_button","sub1_active_button","sub2_active_button","sub3_active_button","toggle","coordinator_explosion","subordinate1_explosion","subordinate2_explosion","subordinate3_explosion","observe","boom","attach_subordinate","checked","notification","scrollTop","scrollHeight","text","perform_transaction","ready","fn","readyState","log_id","active_observable","listen","log_entry","stop_progress","increment","pi","Notification","_element","_p","_inner","_is_progress_active","start_progress","style","width","ms_passed","_interval","setInterval","cos","min","clearInterval","Observable","_observers","observer","_notify_observer","Subordinate","_id","vote_no","includes","transaction_id_sequence","Transaction","payload","_payload","_phase"],"mappings":"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","file":"public/app.js","sourcesContent":["/**\n * Created by rafaelkallis on 04.11.16.\n */\n\nexport const PREPARE = `PREPARE`;\nexport const YES = `YES`;\nexport const NO = `NO`;\nexport const COMMIT = `COMMIT`;\nexport const ABORT = `ABORT`;\nexport const ACK = `ACK`;\nexport const TIMEOUT = `TIMEOUT`;\nexport const BUG_NO = 1;\nexport const BUG_TIMEOUT = 2;\nexport const SUCCESS_MSG = `OK\\n`;\nexport const FAIL_MSG = `ABORTED\\n`;\nexport const SUCCESS = 'SUCCESS';\nexport const FAIL = 'FAIL';","/**\n * Created by rafaelkallis on 03.11.16.\n */\nimport { Promise } from 'bluebird';\nimport { Observable } from './observable';\nimport { PREPARE, COMMIT, ABORT, FAIL, SUCCESS } from './constants';\nimport { PrepareNoVoteError, CoordinatorNotActiveError, SubordinateNotActiveError } from './errors';\n\nexport class Coordinator extends Observable {\n    constructor() {\n        super();\n        this._active = true;\n        this._subordinates = [];\n        this._log_listeners = [];\n        this._pending_abort = {};\n        this._pending_commit = {};\n    }\n\n    get active() {\n        return this._active;\n    }\n\n    set active(active) {\n        if (this.active !== active) {\n            this._active = active;\n            this._log(active ? \"Online\" : \"Offline\");\n            this._notify();\n        }\n    }\n\n    get subordinates() {\n        return this._subordinates;\n    }\n    set subordinates(subordinates) {\n        if (this.subordinates !== subordinates) {\n            this._subordinates = subordinates;\n            this._notify();\n        }\n    }\n\n    listen(log_listener) {\n        this._log_listeners.push(log_listener);\n    }\n\n    _log(entry, duration = 0) {\n        this._log_listeners.forEach(log_listener => log_listener(entry, duration));\n        return Promise.resolve();\n    }\n\n    perform_transaction(transaction, delay, bugs) {\n        this._prepare(transaction, delay, bugs)\n            .catch(PrepareNoVoteError, SubordinateNotActiveError, err =>\n                this._abort(transaction, delay, bugs)\n                    .then(() => Promise.reject(err))\n            )\n            .then(() => this._commit(transaction, delay, bugs))\n            .catch(PrepareNoVoteError, CoordinatorNotActiveError, SubordinateNotActiveError, this._ignore);\n    }\n\n    toggle() {\n        if (this.active = !this.active) {\n            Promise.all(Object.keys(this._pending_commit)\n                .map(transaction_id => this._pending_commit[transaction_id])\n                .map(transaction_info =>\n                    this._log(`${transaction_info.transaction.id}: Recovering Commit`)\n                        .then(() => this._commit(transaction_info.transaction, transaction_info.delay, transaction_info.bugs)))\n            );\n\n            Promise.all(Object.keys(this._pending_abort)\n                .map(transaction_id => this._pending_abort[transaction_id])\n                .map(transaction_info =>\n                    this._log(`${transaction_info.transaction.id}: Recovering Abort`)\n                        .then(() => this._abort(transaction_info.transaction, transaction_info.delay, transaction_info.bugs)))\n            );\n        }\n        return this.active;\n    }\n\n    attach_subordinate(subordinate) {\n        this.subordinates = this.subordinates.concat(subordinate);\n    }\n\n    _prepare(transaction, delay, bugs) {\n        return this.is_active()\n            .then(() => this._log(`${transaction.id}: Sending Prepare`, delay))\n            .then(() => transaction.phase = PREPARE)\n            .then(() => {\n                let coord_crash_sending_idx = bugs.indexOf('coord-crash-prepare-sending');\n                let coord_crash_sending = coord_crash_sending_idx != -1;\n                if (coord_crash_sending) {\n                    bugs.splice(coord_crash_sending_idx, 1);\n                    setTimeout(() => this.active = false, delay * 0.5);\n                }\n            })\n            .then(() => {\n                let coord_crash_receiving_idx = bugs.indexOf('coord-crash-prepare-receiving');\n                let coord_crash_receiving = coord_crash_receiving_idx != -1;\n                if (coord_crash_receiving) {\n                    bugs.splice(coord_crash_receiving_idx, 1);\n                    setTimeout(() => this.active = false, delay * 1.5);\n                }\n            })\n            .then(() => Promise.all(this.subordinates.map(sub =>\n                this.is_active()\n                    .then(() => {\n                        let sub_crash_receiving_idx = bugs.indexOf('sub-crash-prepare-receiving');\n                        let sub_crash_receiving = sub_crash_receiving_idx != -1;\n                        if (sub_crash_receiving && Math.random() < 0.6) {\n                            bugs.splice(sub_crash_receiving_idx, 1);\n                            setTimeout(() => sub.active = false, delay * 0.5);\n                        }\n                    })\n                    .then(() => {\n                        let sub_crash_sending_idx = bugs.indexOf('sub-crash-prepare-sending');\n                        let sub_crash_sending = sub_crash_sending_idx != -1;\n                        if (sub_crash_sending && Math.random() < 0.6) {\n                            bugs.splice(sub_crash_sending_idx, 1);\n                            setTimeout(() => sub.active = false, delay * 1.5);\n                        }\n                    })\n                    .delay(delay)\n                    .then(() => this.is_active())\n                    .then(() => sub.prepare(transaction, delay, bugs))\n            )));\n    }\n\n    _commit(transaction, delay, bugs) {\n        return this.is_active()\n            .then(() => this._log(`${transaction.id}: Sending Commit`, delay))\n            .then(() => transaction.phase = COMMIT)\n            .then(() => this._pending_commit[transaction.id] = { transaction, delay, bugs })\n            .then(() => {\n                let coord_crash_sending_idx = bugs.indexOf('coord-crash-commit-sending');\n                let coord_crash_sending = coord_crash_sending_idx != -1;\n                if (coord_crash_sending) {\n                    setTimeout(() => this.active = false, delay * 0.5);\n                    bugs.splice(coord_crash_sending_idx, 1);\n                }\n            })\n            .then(() => {\n                let coord_crash_receiving_idx = bugs.indexOf('coord-crash-commit-receiving');\n                let coord_crash_receiving = coord_crash_receiving_idx != -1;\n                if (coord_crash_receiving) {\n                    setTimeout(() => this.active = false, delay * 1.5);\n                    bugs.splice(coord_crash_receiving_idx, 1);\n                }\n            })\n            .then(() => Promise.all(this.subordinates.map(sub => this._commit_sub(sub, transaction, delay, bugs))))\n            .then(() => this.is_active())\n            .then(() => delete this._pending_commit[transaction.id])\n            .then(() => this._log(`${transaction.id}: Completed`))\n            .then(() => transaction.phase = \"Finished\");\n    }\n\n    _commit_sub(sub, transaction, delay, bugs) {\n        let attempt_n = 0;\n        let attempt_commit = () =>\n            this.is_active()\n                .then(() => {\n                    if (attempt_n > 0) {\n                        return this._log(`${transaction.id}: retrying Commit on ${sub.id} (${attempt_n} attempt)`, delay);\n                    }\n                })\n                .then(() => {\n                    let sub_crash_receiving_idx = bugs.indexOf('sub-crash-commit-receiving');\n                    let sub_crash_receiving = sub_crash_receiving_idx != -1;\n                    if (sub_crash_receiving && Math.random() < 0.6) {\n                        bugs.splice(sub_crash_receiving_idx, 1);\n                        setTimeout(() => sub.active = false, delay * 0.5);\n                    }\n                })\n                .then(() => {\n                    let sub_crash_sending_idx = bugs.indexOf('sub-crash-commit-sending');\n                    let sub_crash_sending = sub_crash_sending_idx != -1;\n                    if (sub_crash_sending && Math.random() < 0.6) {\n                        bugs.splice(sub_crash_sending_idx, 1);\n                        setTimeout(() => sub.active = false, delay * 1.5);\n                    }\n                })\n                .delay(delay)\n                .then(() => this.is_active())\n                .then(() => sub.commit(transaction, delay, bugs))\n                .catch(SubordinateNotActiveError, () => Promise.delay(Coordinator._exponential_backoff(++attempt_n)).then(() => attempt_commit()));\n\n        return attempt_commit();\n    }\n\n    _abort(transaction, delay, bugs) {\n        return this.is_active()\n            .then(() => this._log(`${transaction.id}: Sending Abort`, delay))\n            .then(() => transaction.phase = ABORT)\n            .then(() => this._pending_abort[transaction.id] = { transaction, delay, bugs })\n            .then(() => {\n                let coord_crash_sending_idx = bugs.indexOf('coord-crash-abort-sending');\n                let coord_crash_sending = coord_crash_sending_idx != -1;\n                if (coord_crash_sending) {\n                    setTimeout(() => this.active = false, delay * 0.5);\n                    bugs.splice(coord_crash_sending_idx, 1);\n                }\n            })\n            .then(() => {\n                let coord_crash_receiving_idx = bugs.indexOf('coord-crash-abort-receiving');\n                let coord_crash_receiving = coord_crash_receiving_idx != -1;\n                if (coord_crash_receiving) {\n                    setTimeout(() => this.active = false, delay * 1.5);\n                    bugs.splice(coord_crash_receiving_idx, 1);\n                }\n            })\n            .then(() => Promise.all(this.subordinates.map(sub => this._abort_sub(sub, transaction, delay, bugs))))\n            .then(() => this.is_active())\n            .then(() => delete this._pending_abort[transaction.id])\n            .then(() => this._log(`${transaction.id}: Completed`))\n            .then(() => transaction.phase = \"Aborted\");\n    }\n\n    _abort_sub(sub, transaction, delay, bugs) {\n        let attempt_n = 0;\n        let attempt_abort = () =>\n            this.is_active()\n                .then(() => {\n                    if (attempt_n > 0) {\n                        return this._log(`${transaction.id}: retrying Abort on ${sub.id} (${attempt_n})`, delay);\n                    }\n                })\n                .then(() => {\n                    let sub_crash_receiving_idx = bugs.indexOf('sub-crash-abort-receiving');\n                    let sub_crash_receiving = sub_crash_receiving_idx != -1;\n                    if (sub_crash_receiving && Math.random() < 0.6) {\n                        bugs.splice(sub_crash_receiving_idx, 1);\n                        setTimeout(() => sub.active = false, delay * 0.5);\n                    }\n                })\n                .then(() => {\n                    let sub_crash_sending_idx = bugs.indexOf('sub-crash-abort-sending');\n                    let sub_crash_sending = sub_crash_sending_idx != -1;\n                    if (sub_crash_sending && Math.random() < 0.6) {\n                        bugs.splice(sub_crash_sending_idx, 1);\n                        setTimeout(() => sub.active = false, delay * 1.5);\n                    }\n                })\n                .delay(delay)\n                .then(() => this.is_active())\n                .then(() => sub.abort(transaction, delay, bugs))\n                .catch(SubordinateNotActiveError, () => Promise.delay(Coordinator._exponential_backoff(++attempt_n)).then(() => attempt_abort()));\n        return attempt_abort();\n    }\n\n    static _exponential_backoff(attempt) {\n        return 500 * Math.pow(2, attempt);\n    }\n\n    is_active() {\n        return this.active ? Promise.resolve() : Promise.reject(new CoordinatorNotActiveError());\n    }\n\n    _ignore(err) {\n        return Promise.resolve();\n    }\n};","/**\n * Created by rafaelkallis on 03.11.16.\n */\n\nexport class PrepareNoVoteError {\n};\n\nexport class NotActiveError {\n};\n\nexport class CoordinatorNotActiveError {\n};\nexport class SubordinateNotActiveError {\n};\n\nPrepareNoVoteError.prototype = Object.create(Error.prototype);\nNotActiveError.prototype = Object.create(Error.prototype);\nCoordinatorNotActiveError.prototype = Object.create(Error.prototype);\nSubordinateNotActiveError.prototype = Object.create(Error.prototype);","export class Explosion {\n    constructor(parent_element){\n        this._parent_element = parent_element;        \n    }\n\n    boom() {\n        let explosion = document.createElement('div');\n        this._parent_element.appendChild(explosion);\n        explosion.classList.add('explosion');\n        setTimeout(() => this._parent_element.removeChild(explosion), 1000);\n    }\n}","const Promise = require('bluebird');\n\nimport { Coordinator } from './coordinator';\nimport { Subordinate } from './subordinate';\nimport { Transaction } from './transaction';\nimport { PrepareNoVoteError, NotActiveError } from './errors';\nimport { Notification } from './notification';\nimport { Explosion } from './explosion';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // do your setup here\n  console.log('Initialized app');\n  Promise.each(Array.from(document.getElementsByTagName('katex')), element => katex.render(element.innerHTML, element));\n  document.getElementById('start-transaction-button').addEventListener('click', () => start_transaction());\n    window.onkeydown = (event) => event.keyCode == 13 && start_transaction();\n\n    let delay_value = document.getElementById('duration-value');\n    let delay_slider = document.getElementById('duration-input');\n    delay_slider.addEventListener('change', () => {\n        delay_value.innerText = `Delay: ${delay_slider.value}`;\n    });\n\n    bind_log_updater('coordinator-log', coordinator);\n    bind_log_updater('subordinate1-log', sub1);\n    bind_log_updater('subordinate2-log', sub2);\n    bind_log_updater('subordinate3-log', sub3);\n\n    let coordinator_active_button = document.getElementById('coordinator-active-button');\n    let sub1_active_button = document.getElementById('subordinate1-active-button');\n    let sub2_active_button = document.getElementById('subordinate2-active-button');\n    let sub3_active_button = document.getElementById('subordinate3-active-button');\n\n    coordinator_active_button.addEventListener('click', () => coordinator.toggle());\n    sub1_active_button.addEventListener('click', () => sub1.toggle());\n    sub2_active_button.addEventListener('click', () => sub2.toggle());\n    sub3_active_button.addEventListener('click', () => sub3.toggle());\n\n    let coordinator_explosion = new Explosion(document.getElementById('coordinator-explosion'));\n    let subordinate1_explosion = new Explosion(document.getElementById('subordinate1-explosion'));\n    let subordinate2_explosion = new Explosion(document.getElementById('subordinate2-explosion'));\n    let subordinate3_explosion = new Explosion(document.getElementById('subordinate3-explosion'));\n\n    coordinator.observe(coordinator => !coordinator.active && coordinator_explosion.boom() || coordinator_active_button.classList.toggle('button-outline'));\n    sub1.observe(sub1 => !sub1.active && subordinate1_explosion.boom() || sub1_active_button.classList.toggle('button-outline'));\n    sub2.observe(sub2 => !sub2.active && subordinate2_explosion.boom() || sub2_active_button.classList.toggle('button-outline'));\n    sub3.observe(sub3 => !sub3.active && subordinate3_explosion.boom() || sub3_active_button.classList.toggle('button-outline'));\n});\n\nlet sub1 = new Subordinate(1);\nlet sub2 = new Subordinate(2);\nlet sub3 = new Subordinate(3);\n\nlet coordinator = new Coordinator();\n\ncoordinator.attach_subordinate(sub1);\ncoordinator.attach_subordinate(sub2);\ncoordinator.attach_subordinate(sub3);\n\nfunction start_transaction() {\n    let bugs = [];\n    document.getElementById('sub-vote-no').checked && bugs.push('sub-vote-no');\n    document.getElementById('sub-crash-prepare-receiving').checked && bugs.push('sub-crash-prepare-receiving');\n    document.getElementById('sub-crash-prepare-sending').checked && bugs.push('sub-crash-prepare-sending');\n    document.getElementById('sub-crash-commit-receiving').checked && bugs.push('sub-crash-commit-receiving');\n    document.getElementById('sub-crash-commit-sending').checked && bugs.push('sub-crash-commit-sending');\n    document.getElementById('sub-crash-abort-receiving').checked && bugs.push('sub-crash-abort-receiving');\n    document.getElementById('sub-crash-abort-sending').checked && bugs.push('sub-crash-abort-sending');\n    document.getElementById('coord-crash-prepare-receiving').checked && bugs.push('coord-crash-prepare-receiving');\n    document.getElementById('coord-crash-prepare-sending').checked && bugs.push('coord-crash-prepare-sending');\n    document.getElementById('coord-crash-commit-receiving').checked && bugs.push('coord-crash-commit-receiving');\n    document.getElementById('coord-crash-commit-sending').checked && bugs.push('coord-crash-commit-sending');\n    document.getElementById('coord-crash-abort-receiving').checked && bugs.push('coord-crash-abort-receiving');\n    document.getElementById('coord-crash-abort-sending').checked && bugs.push('coord-crash-abort-sending');\n\n    let delay = document.getElementById('duration-input').value;\n    let transaction = new Transaction('some_payload');\n    let notification = null;\n    let log = document.getElementById('transaction-log');\n\n    transaction.observe(transaction => {\n        if (!notification) {\n            notification = new Notification(`${transaction.id}: ${transaction.phase}`);\n            log.appendChild(notification.element);\n            log.scrollTop = log.scrollHeight;\n        } else {\n            notification.text = `${transaction.id}: ${transaction.phase}`;\n        }\n    });\n\n    coordinator.perform_transaction(transaction, delay, bugs);\n}\n\nfunction ready(fn) {\n    if (document.readyState != 'loading') {\n        fn();\n    } else {\n        document.addEventListener('DOMContentLoaded', fn);\n    }\n}\n\nfunction bind_log_updater(log_id, active_observable) {\n    active_observable.listen((log_entry, duration) => {\n        let log = document.getElementById(log_id);\n        let notification = new Notification(log_entry, duration);\n        log.appendChild(notification.element);\n        log.scrollTop = log.scrollHeight;\n        active_observable.observe(active_observable => !active_observable.active && notification.stop_progress());\n    });\n}","const increment = 10;\nconst pi = 3.14159265;\n\nexport class Notification {\n    constructor(text = '', duration) {\n        this._element = document.createElement('div');\n        this._element.classList.add('progress-outter');\n\n        this._p = document.createElement('p');\n        this._p.classList.add('progress-text');\n        this._p.innerText = text;\n        this._element.appendChild(this._p);\n\n        this._inner = document.createElement('div');\n        this._inner.classList.add('progress-inner');\n        this._element.appendChild(this._inner);\n\n        this._is_progress_active = false;\n\n        duration && this.start_progress(duration);\n    }\n\n    get text() {\n        return this._p.innerText;\n    }\n\n    set text(text) {\n        if (this._p.innerText !== text) {\n            this._p.innerText = text;\n        }\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    start_progress(duration) {\n        if (!this._is_progress_active) {\n            this._is_progress_active = true;\n            this._inner.style.width = '0';\n            let ms_passed = 100;\n            this._interval = setInterval(() => {\n                ms_passed += increment;\n                this._inner.style.width = (`${50 * (1 + Math.cos(pi + pi * Math.min(ms_passed / duration, 1)))}%`);\n                if (ms_passed > duration) {\n                    this.stop_progress();\n                }\n            }, increment);\n        }\n    }\n\n    stop_progress() {\n        if (this._is_progress_active){\n            clearInterval(this._interval);\n            this._is_progress_active = false;\n        }\n    }\n}","/**\n * Created by rafaelkallis on 08.11.16.\n */\n\nexport class Observable {\n\n    constructor() {\n        this._observers = [];\n    }\n\n    observe(observer){\n        this._observers = this._observers.concat(observer);\n    }\n\n    _notify(){\n        this._observers.forEach(observer => this._notify_observer(observer)); \n    }\n\n    _notify_observer(observer){\n        observer(this);\n    }\n}\n","/**\n * Created by rafaelkallis on 03.11.16.\n */\nimport { PREPARE, COMMIT, ABORT, YES, NO, ACK, TIMEOUT, BUG_NO, BUG_TIMEOUT } from './constants';\nimport { PrepareNoVoteError, SubordinateNotActiveError } from './errors';\nimport { Observable } from './observable';\nimport { Promise } from 'bluebird';\n\nexport class Subordinate extends Observable {\n    constructor(id) {\n        super();\n        this._id = id;\n        this._active = true;\n        this._log_listeners = [];\n    }\n\n    get active() {\n        return this._active;\n    }\n\n    set active(active) {\n        if (this.active !== active) {\n            this._active = active;\n            this._notify();\n            this._log(this.active ? \"Online\" : \"Offline\");\n        }\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    listen(log_listener) {\n        this._log_listeners.push(log_listener);\n    }\n\n    _log(entry, duration = 0) {\n        return new Promise(resolve => {\n            this._log_listeners.forEach(log_listener => log_listener(entry, duration));\n            resolve();\n        });\n    }\n\n    toggle() {\n        this.active = !this.active;\n    }\n\n    is_active() {\n        return this.active ? Promise.resolve() : Promise.reject(new SubordinateNotActiveError());\n    }\n\n    prepare(transaction, delay, bugs) {\n        let vote_no = bugs.includes('sub-vote-no') && Math.random() < 0.5;\n        return this.is_active()\n            .then(() => {\n                if (!vote_no) {\n                    return this._log(`${transaction.id}: YES`, delay)\n                } else {\n                    return this._log(`${transaction.id}: NO`, delay)\n                }\n            })\n            .delay(delay)\n            .then(() => this.is_active())\n            .then(() => {\n                if (!vote_no) {\n                    return Promise.resolve();\n                } else {\n                    return Promise.reject(new PrepareNoVoteError());\n                }\n            });\n    }\n\n    commit(transaction, delay, bugs) {\n        return this.is_active()\n            .then(() => this._log(`${transaction.id}: ACK`, delay))\n            .delay(delay)\n            .then(() => this.is_active());\n    }\n\n    abort(transaction, delay, bugs) {\n        return this.is_active()\n            .then(() => this._log(`${transaction.id}: ACK`, delay))\n            .delay(delay)\n            .then(() => this.is_active());\n\n    }\n}","import {Observable} from './observable';\n\nlet transaction_id_sequence = 0;\n\nexport class Transaction extends Observable {\n\n    constructor(payload){\n        super();\n        this._id = transaction_id_sequence++;\n        this._payload = payload;\n        this._phase = '';\n    }\n\n    get id(){\n        return this._id;\n    }\n\n    get payload(){\n        return this._payload;\n    }\n\n    get phase(){\n        return this._phase;\n    }\n    set phase(phase){\n        if (this._phase !== phase){\n            this._phase = phase;\n            this._notify();\n        }\n    }\n}"]}